#include <stdio.h>
#include <omp.h>

int fib(int n) {
    if (n < 2) return n;

    int x, y;
    #pragma omp task shared(x)
    x = fib(n - 1);
    #pragma omp task shared(y)
    y = fib(n - 2);
    #pragma omp taskwait
    return x + y;
}

int main() {
    int n = 10;
    int result;
    double start = omp_get_wtime();

    #pragma omp parallel
    {
        #pragma omp single
        result = fib(n);
    }

    double end = omp_get_wtime();

    printf("fib(%d) = %d\n", n, result);
    printf("Execution Time: %.6f seconds\n", end - start);

    return 0;
}

Output:

fib(10) = 55
Execution Time: 0.037000 seconds