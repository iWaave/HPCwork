#include <iostream>
#include <omp.h>

int main() {
    const int size = 5;
    float A[size] = {1, 2, 3, 4, 5};
    float B[size] = {10, 20, 30, 40, 50};
    float C[size] = {0};

    // Send data to GPU, do the addition, return result
    #pragma omp target map(to: A[0:size], B[0:size]) map(from: C[0:size])
    #pragma omp parallel for
    for (int i = 0; i < size; ++i) {
        C[i] = A[i] + B[i];
    }

    std::cout << "Result from GPU: ";
    for (int i = 0; i < size; ++i) {
        std::cout << C[i] << " ";
    }
    std::cout << std::endl;

    return 0;
}
